"""
This program writes some test cases for the data analysis functions,
and tests the reliability of the datasets generated by `write_csv.py`
"""
import pandas as pd
import question_3


def assert_equals(var1, var2):
    """
    Takes two variables `var1` and `var2` as parameters.
    Raises an error if the two variables does not equal to each other.
    """
    if var1 != var2:
        raise Exception("{var1} does not equal {var2}"
                        .format(var1=var1, var2=var2))


def in_dataset(random_review, df):
    """
    Takes a list 'random_review' of a random row of customer review from
    the Amazon customer review URL and a dataframe 'df' as parameters.
    Raises an error if df does not contain random_review.
    """
    if random_review not in df.values.tolist():
        raise Exception("this row is not in the dataset")


def test_data(nespresso_df, keurig_df, mr_coffee_df):
    """
    Takes the three coffee maker dataframes as parameter.
    Tests if random rows of customer review is in the dataset we generated
    from `write_csv.py` and tests if the generated dataset is accurate.
    """

    # The regular case for nespresso
    nes_rev = ['January 23 2022', 5.0, 2, ('this is a wonderful step up from '
                                           'the early nespresso machines'),
               ('they have removed all previous flaws from'
                ' the early nespresso machines and came up with a delicious'
                '  quiet  easy to use  and attractive little coffee '
                'machine. love it !')]
    in_dataset(nes_rev, nespresso_df)
    # a row of customer review with video in nespresso
    nes_rev_w_vid = ['April 13 2019',
                     4.0, 42, 'fast and convenient coffee/espresso machine',
                     ('the nespresso vertuoplus coffee and espresso maker '
                      "by de'longhi is my 2nd nespresso machine.  i purchased"
                      " it almost six months ago and it has worked well for "
                      "me.the unit is much quieter than the nespresso pixie "
                      "espresso maker i have and it heats up more quickly.  "
                      "for early morning use the pixie is loud enough to wake"
                      " up a light sleeper.  that is not a worry with the new"
                      " machine.i like the option to make full size cups of "
                      "coffee and the selection of pods that came with the "
                      "machine was varied enough to help me find the flavors "
                      "i enjoy best. i will keep using the pixie for espresso"
                      " until the veturoline espresso sized pods find a lower"
                      " price-per-cup.i do think the price per veturoline pod"
                      " is high but that does not detract from the machine.i "
                      "have read some reviews about a problem with scaling.  "
                      "i only use distilled water in all of my coffee machines"
                      " and although i have only had this machine for just "
                      "over 5 months  i have used my 1st nespresso machine "
                      "almost daily for over 2 years and i have not "
                      "experienced any scaling issues with it.the nespresso"
                      " vertuoplus coffee and espresso maker by de'longhi is"
                      " a good machine and with a fair price.  it is easy to"
                      " use and easy to clean and has a larger water "
                      "reservoir than expected. if you are interested in "
                      "trying the veturoline pods i recommend this machine.")]
    in_dataset(nes_rev_w_vid, nespresso_df)

    # The regular case for keurig
    keu_rev = ['November 13 2018', 2.0, 15, 'horrible frother',
               ('the coffee aspect was never an issue. the milk frother'
                ' never worked. as soon as i got the machine it worked'
                ' fine. the more i washed it the more the frother didn’t'
                ' work. i had the item replaced once and the same thing '
                'happened again. except faster. i tried flipping the little'
                ' piece inside in case it mattered the direction but it '
                'just didn’t spin anymore.')]
    in_dataset(keu_rev, keurig_df)

    # a row of customer review with image in mr coffee
    mrcoffee_rev_w_img = ['June 11 2020', 1.0, 6,
                          'you never know how much coffee you get',
                          ('i have this machine for a few months now. and '
                           'i’ve never got the same amount of coffee with '
                           'same setup of settings and milk. i follow all '
                           'the installation and maintenance guidelines  '
                           'but sadly you never know how much coffee the '
                           'machine will make you in the end. you can select'
                           ' small cup and get it overfilled (like on the'
                           ' picture attached)  or half of that cup when '
                           'you select large setting. same with foam. other '
                           'than that  the machine is fine lol. but it’s so '
                           'difficult to clean the parts after it’s spilled'
                           ' all over the place... or so frustrating to get '
                           'a small cup when you wanted large. just a heads'
                           ' up guys.')]
    in_dataset(mrcoffee_rev_w_img, mr_coffee_df)


def test_add_sentiment():
    """
    Tests the `add_sentiment` method by using the `assert_equal` function
    to check if the `add_sentiment` method in `question_3.py` seccessfully
    added a new column `sentiment` to a small dataframe.
    """
    small_df_before = {'rating': [1, 3, 4]}
    small_df_after = {'rating': [1, 3, 4],
                      'sentiment': ['negative', 'neutral', 'positive']}

    assert_equals(small_df_after, question_3.add_sentiment(small_df_before))


def test_get_word_count():
    """
    Tests the `get_word_count` method by using the `assert_equal` function
    and a small example dataframe.
    """
    small_df = {'review_title': ['I like this a lot!',
                                 'hate this so much',
                                 'I like this so much']}
    assert_equals({'like': 2, 'much': 2},
                  question_3.get_word_count(small_df, 2))


def main():
    nespresso_df = pd.read_csv('nespresso_reviews.csv')
    keurig_df = pd.read_csv('keurig_reviews.csv')
    mr_coffee_df = pd.read_csv('mr_coffee_reviews.csv')
    test_data(nespresso_df, keurig_df, mr_coffee_df)
    test_add_sentiment()
    test_get_word_count()


if __name__ == '__main__':
    main()